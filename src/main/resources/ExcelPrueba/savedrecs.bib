
@article{ ISI:000600922900006,
Author = {Yang, Lanxin and Zhang, He and Shen, Haifeng and Huang, Xin and Zhou,
   Xin and Rong, Guoping and Shao, Dong},
Title = {{Quality Assessment in Systematic Literature Reviews: A Software
   Engineering Perspective}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2021}},
Volume = {{130}},
Month = {{FEB}},
Abstract = {{Context: Quality Assessment (QA) of reviewed literature is paramount to
   a Systematic Literature Review (SLR) as the quality of conclusions
   completely depends on the quality of selected literature. A number of
   researchers in Software Engineering (SE) have developed a variety of QA
   instruments and also reported their challenges. We previously conducted
   a tertiary study on SLRs with QA from 2004 to 2013, and reported the
   findings in 2015.
   Objective: With the widespread use of SLRs in SE and the increasing
   adoption of QA in these SLRs in recent years, it is necessary to
   empirically investigate whether the previous conclusions are still valid
   and whether there are new insights to the subject in question using a
   larger and a more up-to-date SLR set. More importantly, we aim to depict
   a clear picture of QA used in SLRs in SE by aggregating and distilling
   good practices, including the commonly used QA instruments as well as
   the major roles and aspects of QA in research.
   Method: An extended tertiary study was conducted with the newly
   collected SLRs from 2014 to 2018 and the original SLRs from 2004 to 2013
   to systematically review the QA used by SLRs in SE during the 15-year
   period from 2004 to 2018. In addition, this extended study also compared
   and contrasted the findings of the previous study conducted in 2015.
   Results: A total of 241 SLRs between 2004 and 2018 were included, from
   which we identified a number of QA instruments. These instruments are
   generally designed to focus on the rationality of study design, the
   rigor of study execution and analysis, and the credibility and
   contribution of study findings and conclusions, with the emphasis
   largely placed on its rigor. The quality data is mainly used for
   literature selection or as evidence to support conclusions.
   Conclusions: QA has received much attention in SE in more recent years
   and the improvement is evident since the last study in 2015. New
   findings show that the aims are more concise, the instruments are more
   diverse and rigorous, and the criteria are more thoughtful.}},
DOI = {{10.1016/j.infsof.2020.106397}},
Article-Number = {{106397}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
Unique-ID = {{ISI:000600922900006}},
}

@article{ ISI:000557871300014,
Author = {Perez, Jorge and Diaz, Jessica and Garcia-Martin, Javier and Tabuenca,
   Bernardo},
Title = {{Systematic literature reviews in software engineering-enhancement of the
   study selection process using Cohen's Kappa statistic}},
Journal = {{JOURNAL OF SYSTEMS AND SOFTWARE}},
Year = {{2020}},
Volume = {{168}},
Month = {{OCT}},
Abstract = {{Context: Systematic literature reviews (SLRs) rely on a rigorous and
   auditable methodology for minimizing biases and ensuring reliability. A
   common kind of bias arises when selecting studies using a set of
   inclusion/exclusion criteria. This bias can be decreased through dual
   revision, which makes the selection process more time-consuming and
   remains prone to generating bias depending on how each researcher
   interprets the inclusion/exclusion criteria.
   Objective: To reduce the bias and time spent in the study selection
   process, this paper presents a process for selecting studies based on
   the use of Cohen's Kappa statistic. We have defined an iterative process
   based on the use of this statistic during which the criteria are refined
   until obtain almost perfect agreement (k>0.8). At this point, the two
   researchers interpret the selection criteria in the same way, and thus,
   the bias is reduced. Starting from this agreement, dual review can be
   eliminated; consequently, the time spent is drastically shortened.
   Method: The feasibility of this iterative process for selecting studies
   is demonstrated through a tertiary study in the area of software
   engineering on works that were published from 2005 to 2018.
   Results: The time saved in the study selection process was 28\% (for 152
   studies) and if the number of studies is sufficiently large, the time
   saved tend asymptotically to 50\%.
   Conclusions: Researchers and students may take advantage of this
   iterative process for selecting studies when conducting SLRs to reduce
   bias in the interpretation of inclusion and exclusion criteria. It is
   especially useful for research with few resources. (C) 2020 Elsevier
   Inc. All rights reserved.}},
DOI = {{10.1016/j.jss.2020.110657}},
Article-Number = {{110657}},
ISSN = {{0164-1212}},
EISSN = {{1873-1228}},
ResearcherID-Numbers = {{Tabuenca, Bernardo/AAH-9747-2020
   Diaz, Jessica/J-9751-2012
   }},
ORCID-Numbers = {{Tabuenca, Bernardo/0000-0002-1093-4187
   Diaz, Jessica/0000-0001-6738-9370
   Perez Martinez, Jorge Enrique/0000-0003-3349-6017
   GARCIA MARTIN, JAVIER/0000-0002-4308-2953}},
Unique-ID = {{ISI:000557871300014}},
}

@article{ ISI:000513492500002,
Author = {Kudo, Taciana N. and Bulcao-Neto, Renato F. and Vincenzi, Auri M. R.},
Title = {{Requirement patterns: a tertiary study and a research agenda}},
Journal = {{IET SOFTWARE}},
Year = {{2020}},
Volume = {{14}},
Number = {{1}},
Pages = {{18-26}},
Month = {{FEB}},
Abstract = {{The low performance of software projects generally arises from
   erroneous, omitted, misinterpreted, or conflicting requirements. To
   produce better quality specifications, the practise of requirements
   reuse through requirement patterns has been widely debated in the
   secondary literature. However, a tertiary study that provides an
   overview of secondary studies on the state of the art and the practise
   of requirement patterns does not exist. This study describes a study of
   secondary literature on requirement patterns under a perspective on
   research and practise. The identification and selection methods of
   secondary studies include automatic search on five sources, inclusion,
   and exclusion criteria, the snowballing technique, and the quality
   assessment of those studies. Four secondary studies are considered
   relevant according to the purpose of this research from a
   26-distinct-study group. The authors' contribution is two-fold: the
   tertiary study itself and a preliminary research agenda dealing with
   state of the art and practise on requirement patterns.}},
DOI = {{10.1049/iet-sen.2019.0016}},
ISSN = {{1751-8806}},
EISSN = {{1751-8814}},
ResearcherID-Numbers = {{Neto, Renato/U-5833-2019}},
ORCID-Numbers = {{Neto, Renato/0000-0001-8604-0019}},
Unique-ID = {{ISI:000513492500002}},
}

@article{ ISI:000502890100001,
Author = {Cadavid, Hector and Andrikopoulos, Vasilios and Avgeriou, Paris},
Title = {{Architecting systems of systems: A tertiary study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2020}},
Volume = {{118}},
Month = {{FEB}},
Abstract = {{Context: The term System of Systems (SoS) has increasingly been used in
   a wide variety of domains to describe those systems composed of
   independent constituent systems that collaborate towards a mission that
   they could not accomplish on their own. There is a significant volume of
   research by the software architecture community that aims to overcome
   the challenges involved in architecting SoS, as evidenced by the number
   of secondary studies in the field published so far. However, the
   boundaries of such research do not seem to be well defined, at least
   partially, due to the emergence of SoS-adjacent areas of interest like
   the Internet of Things.
   Objective: This paper aims to investigate the current state of research
   on SoS architecting by synthesizing the demographic data, assessing the
   quality and the coverage of architecting activities and software quality
   attributes by the research, and distilling a concept map that reflects a
   community-wide understanding of the concept of SoS.
   Method: We conduct what is, to the best of our understanding, the first
   tertiary study on SoS architecting. Such tertiary study was based on
   five research questions, and was performed by following the guidelines
   of Kitchenham et al. In all, 19 secondary studies were evaluated, which
   is comparable to other tertiary studies.
   Results: The study illustrates a state of disconnection in the research
   community, with research gaps in the coverage of particular phases and
   quality attributes. Furthermore, a more effective approach in
   classifying systems as SoS is required, as the means of resolving
   conceptual and terminological overlaps with the related domains.
   Conclusions: Despite the amount of research in the area of SoS
   architecting, more coordinated and systematic targeted efforts are
   required in order to address the identified issues with the current
   state of research.}},
DOI = {{10.1016/j.infsof.2019.106202}},
Article-Number = {{106202}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ORCID-Numbers = {{Cadavid-Rengifo, Hector/0000-0003-4965-4243}},
Unique-ID = {{ISI:000502890100001}},
}

@inproceedings{ ISI:000628527900032,
Author = {Alves, Carina and Cunha, Joao and Araujo, Joao},
Editor = {{Breaux, T and Zisman, A and Fricker, S and Glinz, M}},
Title = {{On the Pragmatics of Requirements Engineering Practices in a Startup
   Ecosystem}},
Booktitle = {{2020 28TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE'20)}},
Series = {{International Requirements Engineering Conference}},
Year = {{2020}},
Pages = {{311-321}},
Note = {{28th IEEE International Requirements Engineering Conference (RE),
   Zurich, SWITZERLAND, AUG 31-SEP 04, 2020}},
Organization = {{IEEE; IEEE Comp Soc; Univ Zurich; Tech Council Software Engn; Univ Appl
   Sci \& Arts NW Switzerland, Inst Interact Technologies; ACM In Cooperat;
   Special Interest Grp Software Engn}},
Abstract = {{Software startups play an important role to foster innovation, economic
   growth, and job creation in a region. Startups are likely to increase
   their odds of thriving if they are embedded in a startup ecosystem.
   Actors of an ecosystem co-create value, share resources, and support the
   prosperous evolution of peers. In recent years, software startups have
   been the focus of intensive research by the software engineering
   community. In this paper, we conducted a tertiary study to synthesise
   literature in the field of requirements engineering in startups. We
   concluded that there are limited empirical studies reporting an in-depth
   contextual analysis on how software startups perform requirements
   engineering. In parallel, we conducted a case study of startups based at
   Digital Port ecosystem. Our empirical results confirm what has been
   presented by literature that startups adopt requirements practices in a
   flexible and informal manner. In fact, as novel empirical evidence, we
   observed that even as startups evolve by acquiring the first paying
   customers and growing the customer base, requirements practices remain
   very pragmatic. Our results also reveal how actors of the studied
   ecosystem interact to support the co-evolution of startups.}},
DOI = {{10.1109/RE48521.2020.00041}},
ISSN = {{2332-6441}},
ISBN = {{978-1-7281-7438-9}},
Unique-ID = {{ISI:000628527900032}},
}

@inproceedings{ ISI:000578330000010,
Author = {Alberto Garcia-Mireles, Gabriel and Ehecatl Morales-Trujillo, Miguel},
Editor = {{Mejia, J and Munoz, M and Rocha, A and CalvoManzano, JA}},
Title = {{Gamification in Software Engineering: A Tertiary Study}},
Booktitle = {{TRENDS AND APPLICATIONS IN SOFTWARE ENGINEERING}},
Series = {{Advances in Intelligent Systems and Computing}},
Year = {{2020}},
Volume = {{1071}},
Pages = {{116-128}},
Note = {{International Conference on Software Process Improvement (CIMPS), Leon,
   MEXICO, OCT 23-25, 2019}},
Abstract = {{Gamification is a research area that influences the extent to which
   software organizations work and educational practices can be improved in
   software engineering (SE). Given that several systematic reviews on
   gamification in SE have been published, this paper aims at understanding
   how gamification has been addressed, simultaneously identifying its
   impact on SE. As a result of this systematic mapping, we identified 12
   secondary studies. The majority of papers reported the usage of points,
   badges, and leaderboards as game elements in software engineering
   process, software engineering methods and tools, and software
   engineering management. Although secondary studies reported a positive
   impact of gamification, more empirical research is required. In a
   nutshell, current research focuses on the feasibility of using
   gamification in different SE areas; however, there is a need for
   research of application context and for defining variables under study
   to carry out more sound empirical research.}},
DOI = {{10.1007/978-3-030-33547-2\_10}},
ISSN = {{2194-5357}},
EISSN = {{2194-5365}},
ISBN = {{978-3-030-33547-2; 978-3-030-33546-5}},
ORCID-Numbers = {{Garcia-Mireles, Gabriel Alberto/0000-0003-4633-7410}},
Unique-ID = {{ISI:000578330000010}},
}

@article{ ISI:000515965100016,
Author = {Krueger, Jacob and Lausberger, Christian and von Nostitz-Wallwitz,
   Ivonne and Saake, Gunter and Leich, Thomas},
Title = {{Search. Review. Repeat? An empirical study of threats to replicating SLR
   searches}},
Journal = {{EMPIRICAL SOFTWARE ENGINEERING}},
Year = {{2020}},
Volume = {{25}},
Number = {{1}},
Pages = {{627-677}},
Month = {{JAN}},
Abstract = {{A systematic literature review (SLR) is an empirical method used to
   provide an overview of existing knowledge and to aggregate evidence
   within a domain. For computer science, several threats to the
   completeness of such reviews have been identified, leading to
   recommendations and guidelines on how to improve their quality. However,
   few studies address to what extent researchers can replicate an SLR. To
   conduct a replication, researchers have to first understand how the set
   of primary studies has been identified in the original study, and can
   ideally retrieve the same set when following the reported protocol. In
   this article, we focus on this initial step of a replication and report
   a two-fold empirical study: Initially, we performed a tertiary study
   using a sample of SLRs in computer science and identified what
   information that is needed to replicate the searches is reported. Based
   on the results, we conducted a descriptive, multi-case study on digital
   libraries to investigate to what extent these allow replications. The
   results reveal two threats to replications of SLRs: First, while
   researchers have improved the quality of their reports, relevant details
   are still missing-we refer to a reporting threat. Second, we found that
   some digital libraries are inconsistent in their query results-we refer
   to a searching threat. While researchers conducting a review can only
   overcome the first threat and the second may not be an issue for all
   kinds of replications, researchers should be aware of both threats when
   conducting, reviewing, and building on SLRs.}},
DOI = {{10.1007/s10664-019-09763-0}},
ISSN = {{1382-3256}},
EISSN = {{1573-7616}},
ORCID-Numbers = {{Kruger, Jacob/0000-0002-0283-248X}},
Unique-ID = {{ISI:000515965100016}},
}

@article{ ISI:000514463200001,
Author = {Budgen, David and Brereton, Pearl and Williams, Nikki and Drummond,
   Sarah},
Title = {{What Support do Systematic Reviews Provide for Evidence-informed
   Teaching about Software Engineering Practice?}},
Journal = {{E-INFORMATICA-SOFTWARE ENGINEERING JOURNAL}},
Year = {{2020}},
Volume = {{14}},
Number = {{1}},
Pages = {{7-60}},
Abstract = {{Background: The adoption of the evidence-based research paradigm by
   software engineering researchers has created a growing knowledge base
   provided by the outcomes from systematic reviews.
   Aim: We set out to identify and catalogue a sample of the knowledge
   provided by systematic reviews, to determine what support they can
   provide for an evidence-informed approach to teaching about software
   engineering practice.
   Method: We undertook a tertiary study (a mapping study of systematic
   reviews) covering the period to the end of 2015. We identified and
   catalogued those reviews that had findings or made recommendations that
   were considered relevant to teaching about industry practice.
   Results: We examined a sample of 276 systematic reviews, selecting 49
   for which we could clearly identify practice-oriented findings and
   recommendations that were supported by the data analysis provided in the
   review. We have classified these against established software
   engineering education knowledge categories and discuss the extent and
   forms of knowledge provided for each category.
   Conclusion: While systematic reviews can provide knowledge that can
   inform teaching about practice, relatively few systematic reviews
   present the outcomes in a form suitable for this purpose. Using a
   suitable format for presenting a summary of outcomes could improve this.
   Additionally, the increasing number of published systematic reviews
   suggests that there is a need for greater coordination regarding the
   cataloguing of their findings and recommendations.}},
DOI = {{10.37190/e-Inf200101}},
ISSN = {{1897-7979}},
EISSN = {{2084-4840}},
ORCID-Numbers = {{Williams, Nikki/0000-0002-0771-217X
   Budgen, David/0000-0001-7143-0241}},
Unique-ID = {{ISI:000514463200001}},
}

@article{ ISI:000479023200022,
Author = {Barros-Justo, Jose L. and Benitti, Fabiane B. V. and Matalonga, Santiago},
Title = {{Trends in software reuse research: A tertiary study}},
Journal = {{COMPUTER STANDARDS \& INTERFACES}},
Year = {{2019}},
Volume = {{66}},
Month = {{OCT}},
Abstract = {{Context: The reuse of software has been a research topic for more than
   50 years. Throughout that time, many approaches, tools and proposed
   techniques have reached maturity. However, it is not yet a widespread
   practice and some issues need to be further investigated. The latest
   study on software reuse trends dates back to 2005 and we think that it
   should be updated.
   Objective: To identify the current trends in software reuse research.
   Method: A tertiary study based on systematic secondary studies published
   up to July 2018.
   Results: We identified 4,423 works related to software reuse, from which
   3,102 were filtered by selection criteria and quality assessment to
   produce a final set of 56 relevant studies. We identified 30 current
   research topics and 127 proposals for future work, grouped into three
   broad categories: Software Product Lines, Other reuse approaches and
   General reuse topics.
   Conclusions: Frequently reported topics include: Requirements and
   Testing in the category of Lifecycle phases for Software Product Lines,
   and Systematic reuse for decision making in the category of General
   Reuse. The most mentioned future work proposals were Requirements, and
   Evolution and Variability management for Software Product Lines, and
   Systematic reuse for decision making. The identified trends, based on
   future work proposals, demonstrate that software reuse is still an
   interesting area for research. Researchers can use these trends as a
   guide to lead their future projects.}},
DOI = {{10.1016/j.csi.2019.04.011}},
Article-Number = {{103352}},
ISSN = {{0920-5489}},
EISSN = {{1872-7018}},
ResearcherID-Numbers = {{Matalonga, Santiago/T-2292-2018
   Barros-Justo, Jose L./H-3181-2014}},
ORCID-Numbers = {{Matalonga, Santiago/0000-0001-5429-2449
   Barros-Justo, Jose L./0000-0003-2046-2643}},
Unique-ID = {{ISI:000479023200022}},
}

@article{ ISI:000462801200005,
Author = {Curcio, Karina and Santana, Rodolfo and Reinehr, Sheila and Malucelli,
   Andreia},
Title = {{Usability in agile software development: A tertiary study}},
Journal = {{COMPUTER STANDARDS \& INTERFACES}},
Year = {{2019}},
Volume = {{64}},
Pages = {{61-77}},
Month = {{MAY}},
Abstract = {{In the last years the interest in developing research on integration of
   usability and agile software development has been increasing. The number
   of systematic literature reviews, systematic mapping studies and
   non-systematic reviews, related to this thematic has also increased.
   Nevertheless, there is no analysis on the quality of these published
   secondary studies, nor is there a consolidated research that brings the
   answer of how to integrate these two areas. The goal of this paper is to
   categorize secondary studies related to the integration of usability and
   agile software development and present a critical analysis on the
   quality of the selected studies. To accomplish this goal a tertiary
   study was performed to categorize the related studies selected.
   Initially 3,065 papers were identified and further narrowed to 14 by
   applying exclusion criteria and analysis. We classified the selected
   studies as systematic literature reviews, systematic mapping studies and
   non-systematic literature reviews to report the data analysis. As a
   result of this study different forms to integrate usability and agile
   software development were detected as well as the various challenges
   that must be overcome for the integration success. Six main categories
   were identified to represent ways of integrating usability into agile
   development: processes, techniques, practices, recommendations,
   principles and different approaches. Regarding to the challenges for the
   integration seven main categories were also identified: issues related
   to tests, time, work balance, modularization, feedback, prioritization,
   and documentation. Although the interest in researching the integration
   of usability and agile software development has increased in the last
   years, mostly of the analyzed studies neglected the quality criteria and
   presented difficulties to use methods to synthetize the research
   results. Despite this, it has been realized that the integration of
   usability with agile software development is possible and is strongly
   aligned with user -centered design. The initial studies indicated a
   separation of activities and roles into specific tracks with parallel
   work to treat usability in agile software development, but the trend is
   no longer to manage and control these activities in separate ways, so
   new challenges are becoming to appear. Although we have identified
   several points of tension, the integration does not become unfeasible.}},
DOI = {{10.1016/j.csi.2018.12.003}},
ISSN = {{0920-5489}},
EISSN = {{1872-7018}},
ResearcherID-Numbers = {{Reinehr, Sheila S/J-6613-2013}},
ORCID-Numbers = {{Reinehr, Sheila S/0000-0001-9430-7713}},
Unique-ID = {{ISI:000462801200005}},
}

@article{ ISI:000457951800019,
Author = {Khan, Muhammad Uzair and Sherin, Salman and Lqbal, Muhammad Zohaib and
   Zahid, Rubab},
Title = {{Landscaping systematic mapping studies in software engineering: A
   tertiary study}},
Journal = {{JOURNAL OF SYSTEMS AND SOFTWARE}},
Year = {{2019}},
Volume = {{149}},
Pages = {{396-436}},
Month = {{MAR}},
Abstract = {{Context: A number of Systematic Mapping Studies (SMSs) that cover
   Software Engineering (SE) are reported in literature. Tertiary studies
   synthesize the secondary studies to provide a holistic view of an area.
   Objectives: We synthesize SMSs in SE to provide insights into existing
   SE areas and to investigate the trends and quality of SMSs. Methodology:
   We use Systematic Literature Review protocol to analyze and map the SMSs
   in SE, till August 2017, to SE Body of Knowledge (SWEBOK).
   Results: We analyze 210 SMSs and results show that: (1) Software design
   and construction are most active areas in SE; (2) Some areas lack SMSs,
   including mathematical foundations, software configuration management,
   and SE tools; (3) The quality of SMSs is improving with time; (4) SMSs
   in journals have higher quality than SMSs in conferences and are cited
   more often; (5) Low quality in SMSs can be attributed to a lack of
   quality assessment in SMSs and not reporting information about the
   primary studies.
   Conclusion: There is a potential for more SMSs in some SE areas. A
   number of SMSs do not provide the required information for an SMS, which
   leads to a low quality score. (C) 2018 Elsevier Inc. All rights
   reserved.}},
DOI = {{10.1016/j.jss.2018.12.018}},
ISSN = {{0164-1212}},
EISSN = {{1873-1228}},
Unique-ID = {{ISI:000457951800019}},
}

@article{ ISI:000457951800023,
Author = {Raatikainen, Mikko and Tiihonen, Juha and Mannisto, Tomi},
Title = {{Software product lines and variability modeling: A tertiary study}},
Journal = {{JOURNAL OF SYSTEMS AND SOFTWARE}},
Year = {{2019}},
Volume = {{149}},
Pages = {{485-510}},
Month = {{MAR}},
Abstract = {{Context: A software product line is a means to develop a set of products
   in which variability is a central phenomenon captured in variability
   models. The field of SPLs and variability have been topics of extensive
   research over the few past decades. Objective: This research
   characterizes systematic reviews (SRs) in the field, studies how SRs
   analyze and use evidence-based results, and identifies how variability
   is modeled. Method: We conducted a tertiary study as a form of
   systematic review. Results: 86 SRs were included. SRs have become a
   widely adopted methodology covering the field broadly otherwise except
   for variability realization. Numerous variability models exist that
   cover different development artifacts, but the evidence is insufficient
   in quantity and immature, and we argue for better evidence. SRs perform
   well in searching and selecting studies and presenting data. However,
   their analysis and use of the quality of and evidence in the primary
   studies often remains shallow, merely presenting of what kinds of
   evidence exist. Conclusions: There is a need for actionable,
   context-sensitive, and evaluated solutions rather than novel ones.
   Different kinds of SRs (SLRs and Maps) need to be better distinguished,
   and evidence and quality need to be better used in the resulting
   syntheses. (C) 2019 The Authors. Published by Elsevier Inc.}},
DOI = {{10.1016/j.jss.2018.12.027}},
ISSN = {{0164-1212}},
EISSN = {{1873-1228}},
ResearcherID-Numbers = {{Tiihonen, Juha/P-3859-2019
   Mannisto, Tomi/I-3999-2013}},
ORCID-Numbers = {{Tiihonen, Juha/0000-0003-2558-691X
   Raatikainen, Mikko/0000-0002-2410-0722
   Mannisto, Tomi/0000-0001-7470-5183}},
Unique-ID = {{ISI:000457951800023}},
}

@article{ ISI:000454381300012,
Author = {Ampatzoglou, Apostolos and Bibi, Stamatia and Avgeriou, Paris and
   Verbeek, Marijn and Chatzigeorgiou, Alexander},
Title = {{Identifying, categorizing and mitigating threats to validity in software
   engineering secondary studies}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2019}},
Volume = {{106}},
Pages = {{201-230}},
Month = {{FEB}},
Abstract = {{Context: Secondary studies are vulnerable to threats to validity.
   Although, mitigating these threats is crucial for the credibility of
   these studies, we currently lack a systematic approach to identify,
   categorize and mitigate threats to validity for secondary studies.
   Objective: In this paper, we review the corpus of secondary studies,
   with the aim to identify: (a) the trend of reporting threats to
   validity, (b) the most common threats to validity and corresponding
   mitigation actions, and (c) possible categories in which threats to
   validity can be classified.
   Method: To achieve this goal we employ the tertiary study research
   method that is used for synthesizing knowledge from existing secondary
   studies. In particular, we collected data from more than 100 studies,
   published until December 2016 in top quality software engineering venues
   (both journals and conference).
   Results: Our results suggest that in recent years, secondary studies are
   more likely to report their threats to validity. However, the
   presentation of such threats is rather ad hoc, e.g., the same threat may
   be presented with a different name, or under a different category. To
   alleviate this problem, we propose a classification schema for reporting
   threats to validity and possible mitigation actions. Both the
   classification of threats and the associated mitigation actions have
   been validated by an empirical study, i.e., Delphi rounds with experts.
   Conclusion: Based on the proposed schema, we provide a checklist, which
   authors of secondary studies can use for identifying and categorizing
   threats to validity and corresponding mitigation actions, while readers
   of secondary studies can use the checklist for assessing the validity of
   the reported results.}},
DOI = {{10.1016/j.infsof.2018.10.006}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ResearcherID-Numbers = {{Chatzigeorgiou, Alexandros/AAL-6077-2021
   Ampatzoglou, Apostolos/AAC-3632-2020
   }},
ORCID-Numbers = {{Bibi, Stamatia/0000-0003-4248-3752
   Avgeriou, Paris/0000-0002-7101-0754}},
Unique-ID = {{ISI:000454381300012}},
}

@inproceedings{ ISI:000493383400007,
Author = {Fu, Changlan and Zhang, He and Huang, Xin and Zhou, Xin and Li, Zhi},
Book-Group-Author = {{Assoc Comp Machinery}},
Title = {{A Review of Meta-ethnographies in Software Engineering}},
Booktitle = {{PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE
   ENGINEERING}},
Year = {{2019}},
Pages = {{68-77}},
Note = {{23rd International Conference on Evaluation and Assessment in Software
   Engineering (EASE), IT Univ Copenhagen, Copenhagen, DENMARK, APR 14-17,
   2019}},
Abstract = {{Context: Data synthesis is one of the most significant tasks in
   Systematic Literature Review (SLR). Software Engineering (SE)
   researchers have adopted a variety of methods of synthesizing data that
   originated in other disciplines. One of the qualitative data synthesis
   methods is meta-ethnography, which is being used in SE SLRs.
   Objective: We aim at studying the adoption of meta-ethnography in SE
   SLRs in order to understand how this method has been used in SE.
   Method: We conducted a tertiary study of the use of meta-ethnography by
   reviewing sixteen SLRs. We carried out an empirical inquiry by
   integrating SLR and confirmatory email survey.
   Results: There is a general lack of knowledge, or even awareness, of
   different aspects of meta-ethnography and/or how to apply it.
   Conclusion: There is a need of investment in gaining in-depth knowledge
   and skills of correctly applying meta-ethnography in order to increase
   the quality and reliability of the findings generated from SE SLRs. Our
   study reveals that meta-ethnography is a suitable method to SE research.
   We discuss challenges and propose recommendations of adopting
   meta-ethnography in SE. Our effort also offers a preliminary checklist
   of the systematic considerations for doing meta-ethnography in SE and
   improving the quality of meta-ethnographic research in SE.}},
DOI = {{10.1145/3319008.3319015}},
ISBN = {{978-1-4503-7145-2}},
Unique-ID = {{ISI:000493383400007}},
}

@article{ ISI:000440116400008,
Author = {Rios, Nicolli and de Mendonca Neto, Manoel Gomes and Spinola, Rodrigo
   Oliveira},
Title = {{A tertiary study on technical debt: Types, management strategies,
   research trends, and base information for practitioners}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2018}},
Volume = {{102}},
Pages = {{117-145}},
Month = {{OCT}},
Abstract = {{Context: The concept of technical debt (TD) contextualizes problems
   faced during software evolution considering the tasks that are not
   carried out adequately during its development. Currently, it is common
   to associate any impediment related to the software product and its
   development process to the definition of TD. This can bring confusion
   and ambiguity in the use of the term. Besides, due to the increasing
   amount of work in the area, it is difficult to have a comprehensive view
   of the plethora of proposals on TD management.
   Objective: This paper intends to investigate the current state of
   research on TD by identifying what research topics have been considered,
   organizing research directions and practical knowledge that has already
   been defined, identifying the known types of TD, and organizing what
   activities, strategies and tools have been proposed to support the
   management of TD.
   Method: A tertiary study was performed based on a set of five research
   questions. In total, 13 secondary studies, dated from 2012 to March
   2018, were evaluated.
   Results: The results of this tertiary study are beneficial for both
   practitioners and researchers. We evolved a taxonomy of TD types,
   identified a list of situations in which debt items can be found in
   software projects, and organized a map representing the state of the art
   of activities, strategies and tools to support TD management. Besides,
   we also summarized some research directions and practical knowledge, and
   identified the research topics that have been more considered in
   secondary studies.
   Conclusion: This tertiary study revisited the TD landscape. Its results
   can help to identify points that still require further investigation in
   TD research.}},
DOI = {{10.1016/j.infsof.2018.05.010}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ORCID-Numbers = {{Mendonca, Manoel/0000-0002-0874-7665}},
Unique-ID = {{ISI:000440116400008}},
}

@article{ ISI:000426026800005,
Author = {Budgen, David and Brereton, Pearl and Drummond, Sarah and Williams,
   Nikki},
Title = {{Reporting systematic reviews: Some lessons from a tertiary study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2018}},
Volume = {{95}},
Pages = {{62-74}},
Month = {{MAR}},
Abstract = {{Context: Many of the systematic reviews published in software
   engineering are related to research or methodological issues and hence
   are unlikely to be of direct benefit to practitioners or teachers. Those
   that are relevant to practice and teaching need to be presented in a
   form that makes their findings usable with minimum interpretation.
   Objective: We have examined a sample of the many systematic reviews that
   have been published over a period of six years, in order to assess how
   well these are reported and identify useful lessons about how this might
   be done.
   Method: We undertook a tertiary study, performing a systematic review of
   systematic reviews. Our study found 178 systematic reviews published in
   a set of major software engineering journals over the period 2010-2015.
   Of these, 37 provided recommendations or conclusions of relevance to
   education and/or practice and we used the DARE criteria as well as other
   attributes related to the systematic review process to analyse how well
   they were reported.
   Results: We have derived a set of 12 `lessons' that could help authors
   with reporting the outcomes of a systematic review in software
   engineering. We also provide an associated checklist for use by journal
   and conference referees.
   Conclusion: There are several areas where better reporting is needed,
   including quality assessment, synthesis, and the procedures followed by
   the reviewers. Researchers, practitioners, teachers and journal referees
   would all benefit from better reporting of systematic reviews, both for
   clarity and also for establishing the provenance of any findings.}},
DOI = {{10.1016/j.infsof.2017.10.017}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ORCID-Numbers = {{Williams, Nikki/0000-0002-0771-217X
   Budgen, David/0000-0001-7143-0241}},
Unique-ID = {{ISI:000426026800005}},
}

@article{ ISI:000417009000013,
Author = {Budgen, David and Brereton, Pearl and Williams, Nikki and Drummond,
   Sarah},
Title = {{The contribution that empirical studies performed in industry make to
   the findings of systematic reviews: A tertiary study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2018}},
Volume = {{94}},
Pages = {{234-244}},
Month = {{FEB}},
Abstract = {{Context Systematic reviews can provide useful knowledge for software
   engineering practice, by aggregating and synthesising empirical studies
   related to a specific topic.
   Objective: We sought to assess how far the findings of systematic
   reviews addressing practice-oriented topics have been derived from
   empirical studies that were performed in industry or that used industry
   data.
   Method: We drew upon and augmented the data obtained from a tertiary
   study that performed a systematic review of systematic reviews published
   in the period up to the end of 2015, seeking to identify those with
   findings that are relevant for teaching and practice. For the
   supplementary analysis reported here, we then examined the profiles of
   the primary studies as reported in each systematic review.
   Results: We identified 48 systematic reviews as candidates for further
   analysis. The many differences that arise between systematic reviews,
   together with the incompleteness of reporting for these, mean that our
   counts should be treated as indicative rather than definitive. However,
   even when allowing for problems of classification, the findings from the
   majority of these systematic reviews were predominantly derived from
   using primary studies conducted in industry. There was also an emphasis
   upon the use of case studies, and a number of the systematic reviews
   also made some use of weaker `experience' or even `opinion' papers.
   Conclusions: Primary studies from industry play an important role as
   inputs to systematic reviews. Using more rigorous industry-based primary
   studies can give greater authority to the findings of the systematic
   reviews, and should help with the creation of a corpus of sound
   empirical data to support evidence-informed decisions.}},
DOI = {{10.1016/j.infsof.2017.10.012}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ORCID-Numbers = {{Budgen, David/0000-0001-7143-0241
   Williams, Nikki/0000-0002-0771-217X}},
Unique-ID = {{ISI:000417009000013}},
}

@article{ ISI:000397553500004,
Author = {Hoda, Rashina and Salleh, Norsaremah and Grundy, John and Tee, Hui Mien},
Title = {{Systematic literature reviews in agile software development: A tertiary
   study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2017}},
Volume = {{85}},
Pages = {{60-70}},
Month = {{MAY}},
Abstract = {{Context A number of systematic literature reviews and mapping studies
   (SLRs) covering numerous primary research studies on various aspects of
   agile software development (ASD) exist.
   Objective: The aim of this paper is to provide an overview of the SLRs
   on ASD research topics for software engineering researchers and
   practitioners.
   Method: We followed the tertiary study guidelines by Kitchenham et al.
   to find SLRs published between late 1990s to December 2015.
   Results: We found 28 SLRs focusing on ten different ASD research areas:
   adoption, methods, practices, human and social aspects, CMMI, usability,
   global software engineering (GSE), organizational agility, embedded
   systems, and software product line engineering. The number of SLRs on
   ASD topics, similar to those on software engineering (SE) topics in
   general, is on the rise. A majority of the SLRs applied standardized
   guidelines and the quality of these SLRs on ASD topics was found to be
   slightly higher for journal publications than for conferences. While
   some individuals and institutions seem to lead this area, the spread of
   authors and institutions is wide. With respect to prior review
   recommendations, significant progress was noticed in the area of
   connecting agile to established domains such as usability, CMMI, and
   GSE; and considerable progress was observed in focusing on
   management-oriented approaches as Scrum and sustaining ASD in different
   contexts such as embedded systems.
   Conclusion: SLRs of ASD studies are on the rise and cover a variety of
   ASD aspects, ranging from early adoption issues to newer applications of
   ASD such as in product line engineering. ASD research can benefit from
   further primary and secondary studies on evaluating benefits and
   challenges of ASD methods, agile hybrids in large-scale setups,
   sustainability, motivation, teamwork, and project management; as well as
   a fresh review of empirical studies in ASD to cover the period post
   2008. (C) 2017 Elsevier B.V. All rights reserved.}},
DOI = {{10.1016/j.infsof.2017.01.007}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ResearcherID-Numbers = {{Grundy, John C/I-6681-2012
   Grundy, John/AAF-1716-2019}},
ORCID-Numbers = {{Grundy, John C/0000-0003-4928-7076
   Grundy, John/0000-0003-4928-7076}},
Unique-ID = {{ISI:000397553500004}},
}

@inproceedings{ ISI:000434331400014,
Author = {Khan, Arif Ali and Keung, Jacky and Niazi, Mahmood and Hussain, Shahid
   and Zhang, He},
Editor = {{Stolfa, J and Stolfa, S and OConnor, RV and Messnarz, R}},
Title = {{Systematic Literature Reviews of Software Process Improvement: A
   Tertiary Study}},
Booktitle = {{SYSTEMS, SOFTWARE AND SERVICES PROCESS IMPROVEMENT (EUROSPI 2017)}},
Series = {{Communications in Computer and Information Science}},
Year = {{2017}},
Volume = {{748}},
Pages = {{177-190}},
Note = {{24th European Conference on Systems, Software and Services Process
   Improvement (EuroSPI), Ostrava, CZECH REPUBLIC, SEP 06-08, 2017}},
Abstract = {{Systematic Literature Review (SLR) is becoming a vital part of present
   day research in software process improvement (SPI). Nevertheless, there
   is no available study that provides detail review of the published
   software process improvement SLRs. Objective: The aim of this article is
   to classify the SLRs of SPI in order to identify the main research areas
   covered and evaluate the quality of the published SLRs. Methodology: A
   tertiary study was conducted to review the SLRs published by other
   researchers on the topic of SPI. Results: Twenty-four SLR articles were
   identified in the field of SPI. Results show that the quality of the
   selected SLRs on SPI is decreasing over the recent years. The most
   popular research topics are factors affecting SPI and process models.
   Conclusions: This study provides the review and state of the art in the
   context of SPI research. The results of this article would be of great
   interest for future SPI researchers by providing in depth understanding
   of various research areas in SPI. The number of process improvement SLRs
   is increasing and the overall quality is decreasing, which could lessen
   their potential impact on SPI practice. Currently, SPI literature is
   weak in the knowledge areas such as quality and software testing process
   improvement.}},
DOI = {{10.1007/978-3-319-64218-5\_14}},
ISSN = {{1865-0929}},
EISSN = {{1865-0937}},
ISBN = {{978-3-319-64218-5; 978-3-319-64217-8}},
ResearcherID-Numbers = {{Khan, Arif Ali/ABG-2862-2020
   Keung, Jacky/ABA-7089-2020
   Keung, Jacky/X-4693-2019}},
ORCID-Numbers = {{Khan, Arif Ali/0000-0002-8479-1481
   Keung, Jacky/0000-0002-3803-9600}},
Unique-ID = {{ISI:000434331400014}},
}

@inproceedings{ ISI:000426567000018,
Author = {Marimuthu, C. and Chandrasekaran, K.},
Editor = {{Cohen, M and Acher, M and Fuentes, L and Schall, D and Bosch, J and Capilla, R and Bagheri, E and Xiong, Y and Troya, J and RuizCortes, A and Benavides, D}},
Title = {{Systematic Studies in Software Product Lines: A Tertiary Study}},
Booktitle = {{21ST INTERNATIONAL SYSTEMS \& SOFTWARE PRODUCT LINE CONFERENCE (SPLC
   2017), VOL 1}},
Year = {{2017}},
Pages = {{143-152}},
Note = {{21st International System and Software Product Line Conference (SPLC),
   Sevilla, SPAIN, SEP 25-29, 2017}},
Organization = {{HITACHI; Pure Syst; BigLever Softwar Inc; Univ Sevilla, Vicerrectorado
   Relaciones Inst; ISA, Grupo Ingn Software Aplicada; Soc Ingn Software
   Tecnologias Desarrollo Software; Univ Sevilla, Vicerrectorado Investigac}},
Abstract = {{Software product lines are widely used in the software industries to
   increase the re-usability and to decrease maintenance cost. On the other
   hand, systematic reviews are widely used in the software engineering
   research community to provide the overview of the research field and
   practitioners guidelines. Researchers have conducted many systematic
   studies on the different aspects of SPLs. To the best of our knowledge,
   till now there is no tertiary study conducted on systematic studies of
   SPL related research topics. In this paper, we aim at conducting a
   systematic mapping study of existing systematic studies to report the
   overview of the findings for researchers and practitioners. We performed
   snowballing and automated search to find out the relevant systematic
   studies. As a result, we analyzed 60 relevant studies to answer 5
   research questions. The main focus of this tertiary study is to
   highlight the research topics, type of published reviews, active
   researchers and publication forums. Additionally, we highlight some of
   the limitations of the systematic studies. The important finding of this
   study is that the research field is well matured as the systematic
   studies covered a wide range of research topics. Another important
   finding is that many studies provided information for practitioners as
   well as researchers which is a notable improvement in the systematic
   reviews. However, many studies failed to assess the quality of the
   primary studies which is the major limitation of the existing systematic
   studies.}},
DOI = {{10.1145/3106195.3106212}},
ISBN = {{978-1-4503-5221-5}},
ResearcherID-Numbers = {{K, Chandrasekaran/Y-9958-2019
   Kesavan, Chandrasekaran/AAF-3375-2019
   }},
ORCID-Numbers = {{K, Chandrasekaran/0000-0002-8855-3472
   Kesavan, Chandrasekaran/0000-0003-4728-2319
   C, Marimuthu/0000-0002-4905-0530}},
Unique-ID = {{ISI:000426567000018}},
}

@article{ ISI:000386410800012,
Author = {Garousi, Vahid and Mantyla, Mika V.},
Title = {{A systematic literature review of literature reviews in software testing}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2016}},
Volume = {{80}},
Pages = {{195-216}},
Month = {{DEC}},
Abstract = {{Context: Any newcomer or industrial practitioner is likely to experience
   difficulties in digesting large volumes of knowledge in software
   testing. In an ideal world, all knowledge used in industry, education
   and research should be based on high-quality evidence. Since no decision
   should be made based on a single study, secondary studies become
   essential in presenting the evidence. According to our search, over 101
   secondary studies have been published in the area of software testing
   since 1994. With this high number of secondary studies, it is important
   to conduct a review in this area to provide an overview of the research
   landscape in this area.
   Objective: The goal of this study is to systematically map (classify)
   the secondary studies in software testing. We propose that tertiary
   studies can serve as summarizing indexes which facilitate finding the
   most relevant information from secondary studies and thus supporting
   evidence-based decision making in any given area of software
   engineering. Our research questions (RQs) investigate: (1)
   Software-testing specific areas, (2) Types of RQs investigated, (3)
   Numbers and Trends, and (4) Citations of the secondary studies.
   Method: To conduct the tertiary study, we use the systematic-mapping
   approach. Additionally, we contrast the testing topics to the number of
   Google hits to address a general popularity of a testing topic and study
   the most popular papers in terms of citations. We furthermore
   demonstrate the practicality and usefulness of our results by mapping
   them to ISTQB foundation syllabus and to SWEBOK to provide implications
   for practitioners, testing educators, and researchers.
   Results: After a systematic search and voting process, our study pool
   included 101 secondary studies in the area of software testing between
   1994 and 2015. Among our results are the following: (1) In terms of
   number of secondary studies, model-based approach is the most popular
   testing method, web services are the most popular system under test
   (SUT), while regression testing is the most popular testing phase; (2)
   The quality of secondary studies, as measured by a criteria set
   established in the community, is slowly increasing as the years go by;
   and (3) Analysis of research questions, raised and studied in the pool
   of secondary studies, showed that there is a lack of `causality' and
   `relationship' type of research questions, a situation which needs to be
   improved if we, as a community, want to advance as a scientific field.
   (4) Among secondary studies, we found that regular surveys receive
   significantly more citations than SMs (p = 0.009) and SLRs (p = 0.014).
   Conclusion: Despite the large number of secondary studies, we found that
   many important areas of software testing currently lack secondary
   studies, e.g., test management, role of product risk in testing, human
   factors in software testing, beta-testing (A/B-testing), exploratory
   testing,. testability, test stopping criteria, and test-environment
   development. Having secondary studies in those areas is important for
   satisfying industrial and educational needs in software testing. On the
   other hand, education material of ISTQB foundation syllabus and SWEBOK
   could benefit from the inclusion of the latest research topics, namely
   search-based testing, use of cloud-computing for testing and symbolic
   execution. (C) 2016 Elsevier B.V. All rights reserved.}},
DOI = {{10.1016/j.infsof.2016.09.002}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ORCID-Numbers = {{Mantyla, Mika/0000-0002-2841-5879
   Garousi, Vahid/0000-0001-6590-7576}},
Unique-ID = {{ISI:000386410800012}},
}

@article{ ISI:000381232600011,
Author = {Nurdiani, Indira and Borstler, Jurgen and Fricker, Samuel A.},
Title = {{The impacts of agile and lean practices on project constraints: A
   tertiary study}},
Journal = {{JOURNAL OF SYSTEMS AND SOFTWARE}},
Year = {{2016}},
Volume = {{119}},
Pages = {{162-183}},
Month = {{SEP}},
Abstract = {{The growing interest in Agile and Lean software development is reflected
   in the increasing number of secondary studies on the benefits and
   limitations of Agile and Lean processes and practices. The aim of this
   tertiary study is to consolidate empirical evidence regarding Agile and
   Lean practices and their respective impacts on project constraints as
   defined in the Project Management Body of Knowledge (PMBOK): scope,
   quality, schedule, budget, resources, communication, and risk. In this
   tertiary study, 13 secondary studies were included for detailed
   analysis. Given the heterogeneity of the data, we were unable to perform
   a rigorous synthesis. Instead, we mapped the identified Agile and Lean
   practices, and their impacts on the project constraints described in
   PMBOK. From 13 secondary studies, we identified 13 Agile and Lean
   practices. Test-Driven Development (TDD) is studied in ten secondary
   studies, meanwhile other practices are studied in only one or two
   secondary studies. This tertiary study provides a consolidated view of
   the impacts of Agile and Lean practices. The result of this tertiary
   study indicates that TDD has a positive impact on external quality.
   However, due to insufficient data or contradictory results, we were
   unable to make inferences on other Agile and Lean practices.
   Implications for research and practice are further discussed in the
   paper. (C) 2016 Elsevier Inc. All rights reserved.}},
DOI = {{10.1016/j.jss.2016.06.043}},
ISSN = {{0164-1212}},
EISSN = {{1873-1228}},
ResearcherID-Numbers = {{Nurdiani, Indira/G-2954-2019
   }},
ORCID-Numbers = {{Nurdiani, Indira/0000-0001-9355-6179
   Borstler, Jurgen/0000-0003-0639-4234}},
Unique-ID = {{ISI:000381232600011}},
}

@article{ ISI:000379167400008,
Author = {Goulao, Miguel and Amaral, Vasco and Mernik, Marjan},
Title = {{Quality in model-driven engineering: a tertiary study}},
Journal = {{SOFTWARE QUALITY JOURNAL}},
Year = {{2016}},
Volume = {{24}},
Number = {{3}},
Pages = {{601-633}},
Month = {{SEP}},
Abstract = {{Model-driven engineering (MDE) is believed to have a significant impact
   in software quality. However, researchers and practitioners may have a
   hard time locating consolidated evidence on this impact, as the
   available information is scattered in several different publications.
   Our goal is to aggregate consolidated findings on quality in MDE,
   facilitating the work of researchers and practitioners in learning about
   the coverage and main findings of existing work as well as identifying
   relatively unexplored niches of research that need further attention. We
   performed a tertiary study on quality in MDE, in order to gain a better
   understanding of its most prominent findings and existing challenges, as
   reported in the literature. We identified 22 systematic literature
   reviews and mapping studies and the most relevant quality attributes
   addressed by each of those studies, in the context of MDE.
   Maintainability is clearly the most often studied and reported quality
   attribute impacted by MDE. Eighty out of 83 research questions in the
   selected secondary studies have a structure that is more often
   associated with mapping existing research than with answering more
   concrete research questions (e.g., comparing two alternative MDE
   approaches with respect to their impact on a specific quality
   attribute). We briefly outline the main contributions of each of the
   selected literature reviews. In the collected studies, we observed a
   broad coverage of software product quality, although frequently
   accompanied by notes on how much more empirical research is needed to
   further validate existing claims. Relatively, little attention seems to
   be devoted to the impact of MDE on the quality in use of products
   developed using MDE.}},
DOI = {{10.1007/s11219-016-9324-8}},
ISSN = {{0963-9314}},
EISSN = {{1573-1367}},
ResearcherID-Numbers = {{Goulao, Miguel/AAB-8223-2020
   Mernik, Marjan/A-1147-2008
   Amaral, Vasco/A-7031-2010}},
ORCID-Numbers = {{Goulao, Miguel/0000-0002-5356-5203
   Mernik, Marjan/0000-0002-2775-0667
   Amaral, Vasco/0000-0003-3791-5151}},
Unique-ID = {{ISI:000379167400008}},
}

@inproceedings{ ISI:000406108100020,
Author = {Zhou, Xin and Jin, Yuqin and Zhang, He and Li, Shanshan and Huang, Xin},
Editor = {{Potanin, A and Murphy, GC and Reeves, S and Dietrich, J}},
Title = {{A Map of Threats to Validity of Systematic Literature Reviews in
   Software Engineering}},
Booktitle = {{2016 23RD ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE (APSEC 2016)}},
Series = {{Asia-Pacific Software Engineering Conference}},
Year = {{2016}},
Pages = {{153-160}},
Note = {{23rd Asia-Pacific Software Engineering Conference (APSEC), Hamilton, NEW
   ZEALAND, DEC 06-09, 2016}},
Organization = {{Oracle Labs; Google; Massey Univ New Zealand; Rezare Syst; Univ Waikato;
   Univ Auckland; AUT Univ}},
Abstract = {{Context: The assessment of Threats to Validity (TTVs) is critical to
   secure the quality of empirical studies in Software Engineering (SE). In
   the recent decade, Systematic Literature Review (SLR) was becoming an
   increasingly important empirical research method in SE. One of the
   mechanisms of insuring the level of scientific value in the findings of
   an SLR is to rigorously assess its validity. Hence, it is necessary to
   realize the status quo and issues of TTVs of SLRs in SE. Objective: This
   study aims to investigate the-state-of-the-practice of TTVs of the SLRs
   published in SE, and further support SE researchers to improve the
   assessment and strategies against TTVs in order to increase the quality
   of SLRs in SE. Method: We conducted a tertiary study by reviewing the
   SLRs in SE that report the assessment of TTVs. Results: We identified
   316 SLRs published from 2004 to the first half of 2015, in which TTVs
   are discussed. The issues associated to TTVs were also summarized and
   categorized. Conclusion: The common TTVs related to SLR research, such
   as internal validity and reliability, were thoroughly discussed in most
   SLRs. The threats to construct validity and external validity drew less
   attention. Moreover, there are few strategies and tactics being reported
   to cope with the various TTVs.}},
DOI = {{10.1109/APSEC.2016.62}},
ISSN = {{1530-1362}},
ISBN = {{978-1-5090-5575-3}},
Unique-ID = {{ISI:000406108100020}},
}

@inproceedings{ ISI:000578277800057,
Author = {Cartaxo, Bruno and Pinto, Gustavo and Vieira, Elton and Soares, Sergio},
Book-Group-Author = {{ACM}},
Title = {{Evidence Briefings: Towards a Medium to Transfer Knowledge from
   Systematic Reviews to Practitioners}},
Booktitle = {{ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON
   EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT}},
Year = {{2016}},
Note = {{10th ACM/IEEE International Symposium on Empirical Software Engineering
   and Measurement (ESEM), Ciudad Real, SPAIN, SEP 08-09, 2016-2019}},
Organization = {{Assoc Comp Machinery; IEEE}},
Abstract = {{Context: Integrate research evidence with practice is one of the main
   goals of evidence-based software engineering. However, recent studies
   show that the connection between systematic reviews and practitioners
   has not fully established. Goal: This paper presents the first steps
   towards a medium to transfer knowledge acquired from systematic reviews
   to practitioners.
   Method: We selected a set of systematic reviews identified by a tertiary
   study and extracted their findings to generate one-page Evidence
   Briefings to serve as mediums. A design specialist defined the briefings
   structure based on information design and gestalt principles. To
   evaluate the format and content of the briefings we conducted personal
   opinion surveys based on two groups: StackExchange users that posted
   questions in topics related to the reviews, and the authors of the
   selected reviews themselves. The former had a response rate of 21.9\%
   (32 out 146) and the latter 31.8\% (7 out of 22).
   Results: Practitioners rarely use systematic review research papers as
   mediums to acquire knowledge, since just 9\% have told to do so. Both
   researchers and practitioners positively evaluated the evidence
   briefings, since 71\% and 82\% of the StackExchange users and systematic
   review authors, respectively, agreed or strongly agreed that the
   briefings' interface is clear.
   Conclusions: Researchers and practitioners were positive about the
   content and format of the evidence briefings we proposed. It is also
   possible to say that there is a gap between practitioners and systematic
   reviews due to the low percentage of practitioners that consume
   systematic reviews. The good reception of the evidence briefings from
   both sides show a possible route to reduce that gap.}},
DOI = {{10.1145/2961111.2962603}},
ISBN = {{978-1-4503-4427-2}},
ORCID-Numbers = {{Soares, Sergio/0000-0002-4428-2535}},
Unique-ID = {{ISI:000578277800057}},
}

@inproceedings{ ISI:000540645400006,
Author = {Cartaxo, Bruno},
Book-Group-Author = {{ACM}},
Title = {{Integrating Evidence from Systematic Reviews with Software Engineering
   Practice Through Evidence Briefings}},
Booktitle = {{PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND
   ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE `16)}},
Year = {{2016}},
Note = {{20th International Conference on Evaluation and Assessment in Software
   Engineering (EASE), Univ Limerick, Limerick, IRELAND, JUN 01-03, 2016}},
Abstract = {{This paper proposes the questions and method to conduct a research
   intending to promote the first steps towards a better integration
   between evidence from systematic reviews and software engineering
   practice. First, we are planning to conduct a tertiary study to identify
   systematic reviews in software engineering. Second, we intend to
   investigate how those reviews relate to practitioners' issues reported
   in a leading software engineering Question \& Answer platform. Third, we
   plan to generate and evaluate Evidence Briefings from those reviews in
   order to establish a medium to transfer knowledge acquired from
   systematic reviews to practice. This paper also presents some
   preliminary results from pilot studies we have been conducting.}},
DOI = {{10.1145/2915970.2915973}},
ISBN = {{978-1-4503-3691-8}},
Unique-ID = {{ISI:000540645400006}},
}

@inproceedings{ ISI:000583860600024,
Author = {Ruiz, Glauco Antonio and Napoleao, Bianca Minetto and de Souza, Erica
   Ferreira and Felizardo, Katia Romero and Meinerz, Giovani Volnei and da
   Silva, Patrick Rodrigo and Vijaykumar, Nandamudi L.},
Book-Group-Author = {{ACM}},
Title = {{Using meta-ethnography to synthesize research on knowledge management
   and agile software development methodology}},
Booktitle = {{PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS)}},
Year = {{2015}},
Pages = {{230-239}},
Note = {{17th Brazilian Symposium on Software Quality (SBQS) - Ecological Capital
   of Brazil, Curitiba, BRAZIL, OCT 17-19, 2018}},
Organization = {{Pontificia Univ Catlica Parana; Lab Engn \& Processos Software}},
Abstract = {{Context: Software development processes are considered as knowledge
   intensive and therefore Knowledge Management (KM) can be applied to
   efficiently manage the knowledge generated. Agile practices can benefit
   the software organizations in terms of KM. Some studies have already
   presented evidence about this relationship. However, the intersection of
   these two areas still require further more clarification. Objective:
   This study aims to synthesize research on KM and Agile Software
   Development (ASD) using the meta-ethnography method. Method: In order to
   achieve the proposed goal, first, we applied the seven phases of
   meta-ethnography analysis method on a five articles selected from a
   tertiary study on KM and ASD. Second, the relations identified between
   the areas investigated were analysed from interviews with three agile
   development methodology experts. Results: A relation map that summarizes
   the synthesis identified between KM, agile values and scrum activities
   was created. Conclusion: There is a significant contribution in KM and
   ASD for both software engineering academics and industry.}},
DOI = {{10.1145/3275245.3275270}},
ISBN = {{978-1-4503-6565-9}},
Unique-ID = {{ISI:000583860600024}},
}

@inproceedings{ ISI:000380996800002,
Author = {Tang, Hao and Zhou, You and Huang, Xin and Rong, Guoping},
Book-Author = {{Zhang, H}},
Title = {{Does Pareto's Law Apply to Evidence Distribution in Software
   Engineering? An Initial Report}},
Booktitle = {{2014 3RD INTERNATIONAL WORKSHOP ON EVIDENTIAL ASSESSMENT OF SOFTWARE
   TECHNOLOGIES (EAST)}},
Year = {{2014}},
Pages = {{9-16}},
Note = {{3rd International Workshop on Evidential Assessment of Software
   Technologies (EAST), Nanjing, PEOPLES R CHINA, MAY 26, 2014}},
Abstract = {{Data is the source as well as raw format of evidence. As an important
   research methodology in evidence-based software engineering, systematic
   literature reviews (SLRs) are used for identifying the evidence and
   critically appraising the evidence, i.e. empirical studies that report
   (empirical) data about specific research questions. The 80/20 Rule (or
   Pareto's Law) reveals a `vital few' phenomenon widely observed in many
   disciplines in the last century. However, the applicability of Pareto's
   Law to evidence distribution in software engineering (SE) is never
   tested yet. The objective of this paper is to investigate the
   applicability of Pareto's Law to the evidence distribution on specific
   topic areas in software engineering (in the form of systematic reviews),
   which may help us better understand the possible distribution of
   evidence in software engineering, and further improve the effectiveness
   and efficiency of literature search. We performed a tertiary study of
   SLRs in software engineering dated between 2004 and 2012. We further
   tested the Pareto's Law by collecting, analyzing, and interpreting the
   distribution (over publication venues) of the primary studies reported
   in the existing SLRs. Our search identified 255 SLRs, 107 of which were
   included according to the selection criteria. The analysis of the
   extracted data from these SLRs presents a preliminary view of the
   evidence (study) distribution in software engineering. The nonuniform
   distribution of evidence is supported by the data from the existing SLRs
   in SE. However, the present observation reflects a weaker `vital few'
   relation between study and venue than the 80/20 Rule statement. Top
   referenced venues are suggested when researchers search for studies in
   software engineering. It is also noticeable to the community that the
   primary studies are improperly or incompletely reported in many SLRs.}},
DOI = {{10.1145/2627508.2627510}},
ISBN = {{978-1-4503-2965-1}},
Unique-ID = {{ISI:000380996800002}},
}

@article{ ISI:000329151900006,
Author = {Verner, J. M. and Brereton, O. P. and Kitchenham, B. A. and Turner, M.
   and Niazi, M.},
Title = {{Risks and risk mitigation in global software development: A tertiary
   study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2014}},
Volume = {{56}},
Number = {{1}},
Pages = {{54-78}},
Month = {{JAN}},
Abstract = {{Context
   There is extensive interest in global software development (GSD) which
   has led to a large number of papers reporting on GSD. A number of
   systematic literature reviews (SLRs) have attempted to aggregate
   information from individual studies.
   Objective: We wish to investigate GSD SLR research with a focus on
   discovering what research has been conducted in the area and to
   determine if the SLRs furnish appropriate risk and risk mitigation
   advice to provide guidance to organizations involved with GSD.
   Method: We performed a broad automated search to identify GSD SLRs. Data
   extracted from each study included: (1) authors, their affiliation and
   publishing venue, (2) SLR quality, (3) research focus, (4) GSD risks,
   (5) risk mitigation strategies and, (6) for each SLR the number of
   primary studies reporting each risk and risk mitigation strategy.
   Results: We found a total of 37 papers reporting 24 unique GSD SLR
   studies. Major GSD topics covered include: (1) organizational
   environment, (2) project execution, (3) project planning and control and
   (4) project scope and requirements. We extracted 85 risks and 77 risk
   mitigation advice items and categorized them under four major headings:
   outsourcing rationale, software development, human resources, and
   project management. The largest group of risks was related to project
   management. GSD outsourcing rationale risks ranked highest in terms of
   primary study support but in many cases these risks were only identified
   by a single SLR.
   Conclusions: The focus of the GSD SLRs we identified is mapping the
   research rather than providing evidence-based guidance to industry.
   Empirical support for the majority of risks identified is moderate to
   low, both in terms of the number of SLRs identifying the risk, and in
   the number of primary studies providing empirical support. Risk
   mitigation advice is also limited, and empirical support for these items
   is low. (C) 2013 Elsevier B.V. All rights reserved.}},
DOI = {{10.1016/j.infsof.2013.06.005}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ResearcherID-Numbers = {{Kitchenham, Barbara/AAL-4311-2020
   Niazi, Mahmood/C-8873-2015}},
ORCID-Numbers = {{Kitchenham, Barbara/0000-0002-6134-8460
   Niazi, Mahmood/0000-0001-7318-7644}},
Unique-ID = {{ISI:000329151900006}},
}

@article{ ISI:000320217900014,
Author = {Zhang, He and Babar, Muhammad Ali},
Title = {{Systematic reviews in software engineering: An empirical investigation}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2013}},
Volume = {{55}},
Number = {{7}},
Pages = {{1341-1354}},
Month = {{JUL}},
Abstract = {{Background: Systematic Literature Reviews (SLRs) have gained significant
   popularity among Software Engineering (SE) researchers since 2004.
   Several researchers have also been working on improving the scientific
   and methodological infrastructure to support SLRs in SE. We argue that
   there is also an apparent and essential need for evidence-based body of
   knowledge about different aspects of the adoption of SLRs in SE.
   Objective: The main objective of this research is to empirically
   investigate the adoption, value, and use of SLRs in SE research from
   various perspectives.
   Method: We used mixed-methods approach (systematically integrating
   tertiary literature review, semi-structured interviews and
   questionnaire-based survey) as it is based on a combination of
   complementary research methods which are expected to compensate each
   others' limitations.
   Results: A large majority of the participants are convinced of the value
   of using a rigourous and systematic methodology for literature reviews
   in SE research. However, there are concerns about the required time and
   resources for SLRs. One of the most important motivators for performing
   SLRs is new findings and inception of innovative ideas for further
   research. The reported SLRs are more influential compared to the
   traditional literature reviews in terms of number of citations. One of
   the main challenges of conducting SLRs is drawing a balance between
   methodological rigour and required effort.
   Conclusions: SLR has become a popular research methodology for
   conducting literature review and evidence aggregation in SE. There is an
   overall positive perception about this relatively new methodology to SE
   research. The findings provide interesting insights into different
   aspects of SLRs. We expect that the findings can provide valuable
   information to readers about what can be expected from conducting SLRs
   and the potential impact of such reviews. (C) 2012 Elsevier B.V. All
   rights reserved.}},
DOI = {{10.1016/j.infsof.2012.09.008}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
Unique-ID = {{ISI:000320217900014}},
}

@article{ ISI:000292950700001,
Author = {da Silva, Fabio Q. B. and Santos, Andre L. M. and Soares, Sergio and
   Franca, A. Cesar C. and Monteiro, Cleviton V. F. and Maciel, Felipe
   Farias},
Title = {{Six years of systematic literature reviews in software engineering: An
   updated tertiary study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2011}},
Volume = {{53}},
Number = {{9, SI}},
Pages = {{899-913}},
Month = {{SEP}},
Abstract = {{Context: Since the introduction of evidence-based software engineering
   in 2004, systematic literature review (SLR) has been increasingly used
   as a method for conducting secondary studies in software engineering.
   Two tertiary studies, published in 2009 and 2010, identified and
   analysed 54 SLRs published in journals and conferences in the period
   between 1st January 2004 and 30th June 2008.
   Objective: In this article, our goal was to extend and update the two
   previous tertiary studies to cover the period between 1st July 2008 and
   31st December 2009. We analysed the quality, coverage of software
   engineering topics, and potential impact of published SLRs for education
   and practice.
   Method: We performed automatic and manual searches for SLRs published in
   journals and conference proceedings, analysed the relevant studies, and
   compared and integrated our findings with the two previous tertiary
   studies.
   Results: We found 67 new SLRs addressing 24 software engineering topics.
   Among these studies, 15 were considered relevant to the undergraduate
   educational curriculum, and 40 appeared of possible interest to
   practitioners. We found that the number of SLRs in software engineering
   is increasing, the overall quality of the studies is improving, and the
   number of researchers and research organisations worldwide that are
   conducting SLRs is also increasing and spreading.
   Conclusion: Our findings suggest that the software engineering research
   community is starting to adopt SLRs consistently as a research method.
   However, the majority of the SLRs did not evaluate the quality of
   primary studies and fail to provide guidelines for practitioners, thus
   decreasing their potential impact on software engineering practice. 0
   2011 Elsevier B.V. All rights reserved.}},
DOI = {{10.1016/j.infsof.2011.04.004}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ResearcherID-Numbers = {{Soares, Sergio/K-3712-2012
   Ines, INCT/J-9550-2013
   da Silva, Fabio Queda Bueno/A-6524-2012
   Santos, Andre L M/D-8279-2013}},
ORCID-Numbers = {{Soares, Sergio/0000-0002-4428-2535
   da Silva, Fabio Queda Bueno/0000-0002-3734-040X
   Santos, Andre L M/0000-0001-6661-5970}},
Unique-ID = {{ISI:000292950700001}},
}

@article{ ISI:000288919900003,
Author = {Cruzes, Daniela S. and Dyba, Tore},
Title = {{Research synthesis in software engineering: A tertiary study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2011}},
Volume = {{53}},
Number = {{5, SI}},
Pages = {{440-455}},
Month = {{MAY}},
Abstract = {{Context: Comparing and contrasting evidence from multiple studies is
   necessary to build knowledge and reach conclusions about the empirical
   support for a phenomenon. Therefore, research synthesis is at the center
   of the scientific enterprise in the software engineering discipline.
   Objective: The objective of this article is to contribute to a better
   understanding of the challenges in synthesizing software engineering
   research and their implications for the progress of research and
   practice.
   Method: A tertiary study of journal articles and full proceedings papers
   from the inception of evidence-based software engineering was performed
   to assess the types and methods of research synthesis in systematic
   reviews in software engineering.
   Results: As many as half of the 49 reviews included in the study did not
   contain any synthesis. Of the studies that did contain synthesis, two
   thirds performed a narrative or a thematic synthesis. Only a few studies
   adequately demonstrated a robust, academic approach to research
   synthesis.
   Conclusion: We concluded that, despite the focus on systematic reviews,
   there is limited attention paid to research synthesis in software
   engineering. This trend needs to change and a repertoire of synthesis
   methods needs to be an integral part of systematic reviews to increase
   their significance and utility for research and practice. (C) 2011
   Elsevier B.V. All rights reserved.}},
DOI = {{10.1016/j.infsof.2011.01.004}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
Unique-ID = {{ISI:000288919900003}},
}

@article{ ISI:000282100100003,
Author = {Kitchenham, Barbara A. and Brereton, Pearl and Turner, Mark and Niazi,
   Mahmood K. and Linkman, Stephen and Pretorius, Rialette and Budgen,
   David},
Title = {{Refining the systematic literature review process-two
   participant-observer case studies}},
Journal = {{EMPIRICAL SOFTWARE ENGINEERING}},
Year = {{2010}},
Volume = {{15}},
Number = {{6}},
Pages = {{618-653}},
Month = {{DEC}},
Abstract = {{Systematic literature reviews (SLRs) are a major tool for supporting
   evidence-based software engineering. Adapting the procedures involved in
   such a review to meet the needs of software engineering and its
   literature remains an ongoing process. As part of this process of
   refinement, we undertook two case studies which aimed 1) to compare the
   use of targeted manual searches with broad automated searches and 2) to
   compare different methods of reaching a consensus on quality. For Case
   1, we compared a tertiary study of systematic literature reviews
   published between January 1, 2004 and June 30, 2007 which used a manual
   search of selected journals and conferences and a replication of that
   study based on a broad automated search. We found that broad automated
   searches find more studies than manual restricted searches, but they may
   be of poor quality. Researchers undertaking SLRs may be justified in
   using targeted manual searches if they intend to omit low quality
   papers, or they are assessing research trends in research methodologies.
   For Case 2, we analyzed the process used to evaluate the quality of
   SLRs. We conclude that if quality evaluation of primary studies is a
   critical component of a specific SLR, assessments should be based on
   three independent evaluators incorporating at least two rounds of
   discussion.}},
DOI = {{10.1007/s10664-010-9134-8}},
ISSN = {{1382-3256}},
EISSN = {{1573-7616}},
ResearcherID-Numbers = {{Kitchenham, Barbara/AAL-4311-2020
   Niazi, Mahmood/C-8873-2015}},
ORCID-Numbers = {{Kitchenham, Barbara/0000-0002-6134-8460
   Budgen, David/0000-0001-7143-0241
   Niazi, Mahmood/0000-0001-7318-7644}},
Unique-ID = {{ISI:000282100100003}},
}

@article{ ISI:000279035100002,
Author = {Kitchenham, Barbara and Pretorius, Rialette and Budgen, David and
   Brereton, O. Pearl and Turner, Mark and Niazi, Mahmood and Linkman,
   Stephen},
Title = {{Systematic literature reviews in software engineering - A tertiary study}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2010}},
Volume = {{52}},
Number = {{8}},
Pages = {{792-805}},
Month = {{AUG}},
Abstract = {{Context: In a previous study, we reported on a systematic literature
   review (SLR), based on a manual search of 13 journals and conferences
   undertaken in the period 1st January 2004 to 30th June 2007.
   Objective: The aim of this on-going research is to provide an annotated
   catalogue of SLRs available to software engineering researchers and
   practitioners. This study updates our previous study using a broad
   automated search.
   Method: We performed a broad automated search to find SLRs published in
   the time period 1st January 2004 to 30th June 2008. We contrast the
   number, quality and source of these SLRs with SLRs found in the original
   study.
   Results: Our broad search found an additional 35 SLRs corresponding to
   33 unique studies. Of these papers, 17 appeared relevant to the
   undergraduate educational curriculum and 12 appeared of possible
   interest to practitioners. The number of SLRs being published is
   increasing. The quality of papers in conferences and workshops has
   improved as more researchers use SLR guidelines.
   Conclusion: SLRs appear to have gone past the stage of being used solely
   by innovators but cannot yet be considered a main stream software
   engineering research methodology. They are addressing a wide range of
   topics but still have limitations, such as often failing to assess
   primary study quality. (C) 2010 Elsevier B.V. All rights reserved.}},
DOI = {{10.1016/j.infsof.2010.03.006}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ResearcherID-Numbers = {{Kitchenham, Barbara/AAL-4311-2020
   Niazi, Mahmood/C-8873-2015
   }},
ORCID-Numbers = {{Kitchenham, Barbara/0000-0002-6134-8460
   Niazi, Mahmood/0000-0001-7318-7644
   Budgen, David/0000-0001-7143-0241}},
Unique-ID = {{ISI:000279035100002}},
}

@inproceedings{ ISI:000274866100031,
Author = {Kitchenham, Barbara and Brereton, Pearl and Turner, Mark and Niazi,
   Mahmood and Linkman, Stephen and Pretorius, Rialette and Budgen, David},
Book-Group-Author = {{IEEE}},
Title = {{The Impact of Limited Search Procedures for Systematic Literature
   Reviews - A Participant-Observer Case Study}},
Booktitle = {{ESEM: 2009 3RD INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING
   AND MEASUREMENT}},
Series = {{International Symposium on Empirical Software Engineering and
   Measurement}},
Year = {{2009}},
Pages = {{337+}},
Note = {{3rd International Symposium on Empirical Software Engineering and
   Measurement, Lake Buena Vista, FL, OCT 15-16, 2009}},
Organization = {{Univ SE Calif, Ctr Syst \& Software Engn; ABB; Microsoft Res; IEEE; ACM
   SIGSOFT; N Carolina State Univ Comp Sci}},
Abstract = {{This study aims to compare the use of targeted manual searches with
   broad automated searches, and to assess the importance of grey
   literature and breadth of search on the outcomes of SLRs. We used a
   participant-observer multi-case embedded case study. Our two cases were
   a tertiary study of systematic literature reviews published between
   January 2004 and June 200 7 based on a manual search of selected
   journals and conferences and a replication of that study based on a
   broad automated search. Broad searches find more papers than restricted
   searches, but the papers may be of poor quality. Researchers undertaking
   SLRs may be justified in using targeted manual searches if they intend
   to omit low quality papers; if publication bias is not an issue; or if
   they are assessing research trends in research methodologies.}},
DOI = {{10.1109/esem.2009.5314238}},
ISSN = {{1938-6451}},
ISBN = {{978-1-4244-4842-5}},
ResearcherID-Numbers = {{Niazi, Mahmood/C-8873-2015
   Kitchenham, Barbara/AAL-4311-2020
   }},
ORCID-Numbers = {{Niazi, Mahmood/0000-0001-7318-7644
   Kitchenham, Barbara/0000-0002-6134-8460
   Budgen, David/0000-0001-7143-0241}},
Unique-ID = {{ISI:000274866100031}},
}

@article{ ISI:000262077500003,
Author = {Kitchenham, Barbara and Brereton, O. Pearl and Budgen, David and Turner,
   Mark and Bailey, John and Linkman, Stephen},
Title = {{Systematic literature reviews in software engineering - A systematic
   literature review}},
Journal = {{INFORMATION AND SOFTWARE TECHNOLOGY}},
Year = {{2009}},
Volume = {{51}},
Number = {{1, SI}},
Pages = {{7-15}},
Month = {{JAN}},
Abstract = {{Background: In 2004 the concept of evidence-based software engineering
   (EBSE) was introduced at the ICSE04 conference.
   Aims: This study assesses the impact of systematic literature reviews
   (SLRs) which are the recommended EBSE method for aggregating evidence.
   Method: We used the standard systematic literature review method
   employing a manual search of 10 journals and 4 conference proceedings.
   Results: Of 20 relevant studies, eight addressed research trends rather
   than technique evaluation. Seven SLRs addressed cost estimation. The
   quality of SLRs was fair with only three scoring less than 2 out of 4.
   Conclusions: Currently, the topic areas covered by SLRs are limited.
   European researchers, particularly those at the Simula Laboratory appear
   to be the leading exponents of systematic literature reviews. The series
   of cost estimation SLRs demonstrate the potential value of EBSE for
   synthesising evidence and making it available to practitioners. (C) 2008
   Elsevier B.V. All rights reserved.}},
DOI = {{10.1016/j.infsof.2008.09.009}},
ISSN = {{0950-5849}},
EISSN = {{1873-6025}},
ResearcherID-Numbers = {{ONeill, Susan/B-1761-2010
   Liu, Yan/K-4090-2019
   Liu, Yan/Z-1637-2018
   Kitchenham, Barbara/AAL-4311-2020
   }},
ORCID-Numbers = {{Liu, Yan/0000-0003-3778-1325
   Kitchenham, Barbara/0000-0002-6134-8460
   Budgen, David/0000-0001-7143-0241}},
Unique-ID = {{ISI:000262077500003}},
}
